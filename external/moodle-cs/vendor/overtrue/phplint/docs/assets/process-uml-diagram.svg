<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="1101pt" height="1897pt"
 viewBox="0.00 0.00 1101.00 1897.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1893)">
<title>%3</title>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="#deb887" stroke="#000000" points="87,-1712 87,-1881 1085,-1881 1085,-1712 87,-1712"/>
<text text-anchor="middle" x="586" y="-1865.8" font-family="Times,serif" font-size="14.00" fill="#000000">Overtrue\PHPLint\Process</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="#b0c4de" stroke="#000000" points="8,-218 8,-1704 960,-1704 960,-218 8,-218"/>
<text text-anchor="middle" x="484" y="-1688.8" font-family="Times,serif" font-size="14.00" fill="#000000">Symfony\Component\Process</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="transparent" stroke="#000000" points="394,-8 394,-210 574,-210 574,-8 394,-8"/>
<text text-anchor="middle" x="484" y="-194.8" font-family="Times,serif" font-size="14.00" fill="#000000">0</text>
</g>
<!-- Overtrue\\PHPLint\\Process\\LintProcessItem -->
<g id="node1" class="node">
<title>Overtrue\\PHPLint\\Process\\LintProcessItem</title>
<polygon fill="#fefece" stroke="transparent" points="1077,-1850 891,-1850 891,-1720 1077,-1720 1077,-1850"/>
<polygon fill="#eeeeee" stroke="transparent" points="899,-1812 899,-1846 1069,-1846 1069,-1812 899,-1812"/>
<polygon fill="none" stroke="#000000" points="899,-1812 899,-1846 1069,-1846 1069,-1812 899,-1812"/>
<text text-anchor="start" x="935.5" y="-1818.8" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">LintProcessItem</text>
<polygon fill="none" stroke="#000000" points="899,-1806 899,-1812 1069,-1812 1069,-1806 899,-1806"/>
<polygon fill="none" stroke="#000000" points="899,-1724 899,-1806 1069,-1806 1069,-1724 899,-1724"/>
<text text-anchor="start" x="904" y="-1789.8" font-family="Times,serif" font-size="14.00" fill="#000000">+ hasSyntaxError() : bool</text>
<text text-anchor="start" x="904" y="-1770.8" font-family="Times,serif" font-size="14.00" fill="#000000">+ hasSyntaxWarning() : bool</text>
<text text-anchor="start" x="904" y="-1751.8" font-family="Times,serif" font-size="14.00" fill="#000000">+ getMessage() : string</text>
<text text-anchor="start" x="904" y="-1732.8" font-family="Times,serif" font-size="14.00" fill="#000000">+ getLine() : int</text>
</g>
<!-- Overtrue\\PHPLint\\Process\\LintProcess -->
<g id="node2" class="node">
<title>Overtrue\\PHPLint\\Process\\LintProcess</title>
<polygon fill="#fefece" stroke="transparent" points="872.5,-1831 95.5,-1831 95.5,-1739 872.5,-1739 872.5,-1831"/>
<polygon fill="#eeeeee" stroke="transparent" points="104,-1793 104,-1827 865,-1827 865,-1793 104,-1793"/>
<polygon fill="none" stroke="#000000" points="104,-1793 104,-1827 865,-1827 865,-1793 104,-1793"/>
<text text-anchor="start" x="450" y="-1799.8" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">LintProcess</text>
<polygon fill="none" stroke="#000000" points="104,-1787 104,-1793 865,-1793 865,-1787 104,-1787"/>
<polygon fill="none" stroke="#000000" points="104,-1743 104,-1787 865,-1787 865,-1743 104,-1743"/>
<text text-anchor="start" x="109" y="-1770.8" font-family="Times,serif" font-size="14.00" fill="#000000">+ __construct(command : array, cwd : string = «unknown», env : array = «unknown», input : mixed = «unknown», timeout : float = 60)</text>
<text text-anchor="start" x="109" y="-1751.8" font-family="Times,serif" font-size="14.00" fill="#000000">+ getItem(output : string) : Overtrue\PHPLint\Process\LintProcessItem</text>
</g>
<!-- Symfony\\Component\\Process\\Process -->
<g id="node3" class="node">
<title>Symfony\\Component\\Process\\Process</title>
<polygon fill="#fefece" stroke="transparent" points="951.5,-1673 16.5,-1673 16.5,-226 951.5,-226 951.5,-1673"/>
<polygon fill="#eeeeee" stroke="transparent" points="25,-1634.5 25,-1668.5 944,-1668.5 944,-1634.5 25,-1634.5"/>
<polygon fill="none" stroke="#000000" points="25,-1634.5 25,-1668.5 944,-1668.5 944,-1634.5 25,-1634.5"/>
<text text-anchor="start" x="462.5" y="-1641.3" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">Process</text>
<polygon fill="none" stroke="#000000" points="25,-1381.5 25,-1634.5 944,-1634.5 944,-1381.5 25,-1381.5"/>
<text text-anchor="start" x="30" y="-1618.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» ERR : string = &quot;err&quot; {readOnly}</text>
<text text-anchor="start" x="30" y="-1599.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» OUT : string = &quot;out&quot; {readOnly}</text>
<text text-anchor="start" x="30" y="-1580.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» STATUS_READY : string = &quot;ready&quot; {readOnly}</text>
<text text-anchor="start" x="30" y="-1561.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» STATUS_STARTED : string = &quot;started&quot; {readOnly}</text>
<text text-anchor="start" x="30" y="-1542.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» STATUS_TERMINATED : string = &quot;terminated&quot; {readOnly}</text>
<text text-anchor="start" x="30" y="-1523.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» STDIN : int = 0 {readOnly}</text>
<text text-anchor="start" x="30" y="-1504.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» STDOUT : int = 1 {readOnly}</text>
<text text-anchor="start" x="30" y="-1485.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» STDERR : int = 2 {readOnly}</text>
<text text-anchor="start" x="30" y="-1466.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» TIMEOUT_PRECISION : float = 0.2 {readOnly}</text>
<text text-anchor="start" x="30" y="-1447.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» ITER_NON_BLOCKING : int = 1 {readOnly}</text>
<text text-anchor="start" x="30" y="-1428.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» ITER_KEEP_OUTPUT : int = 2 {readOnly}</text>
<text text-anchor="start" x="30" y="-1409.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» ITER_SKIP_OUT : int = 4 {readOnly}</text>
<text text-anchor="start" x="30" y="-1390.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» ITER_SKIP_ERR : int = 8 {readOnly}</text>
<polygon fill="none" stroke="#000000" points="25,-1356.5 25,-1381.5 944,-1381.5 944,-1356.5 25,-1356.5"/>
<text text-anchor="start" x="30" y="-1365.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» exitCodes = […]</text>
<polygon fill="none" stroke="#000000" points="25,-229.5 25,-1356.5 944,-1356.5 944,-229.5 25,-229.5"/>
<text text-anchor="start" x="30" y="-1340.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ __construct(command : array, cwd : string = «unknown», env : array = «unknown», input : mixed = «unknown», timeout : float = 60)</text>
<text text-anchor="start" x="30" y="-1321.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» fromShellCommandline(command : string, cwd : string = «unknown», env : array = «unknown», input : mixed = «unknown», timeout : float = 60) : static</text>
<text text-anchor="start" x="30" y="-1302.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ __sleep() : array</text>
<text text-anchor="start" x="30" y="-1283.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ __wakeup()</text>
<text text-anchor="start" x="30" y="-1264.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ __destruct()</text>
<text text-anchor="start" x="30" y="-1245.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ __clone()</text>
<text text-anchor="start" x="30" y="-1226.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ run(callback : callable = «unknown», env : array = []) : int</text>
<text text-anchor="start" x="30" y="-1207.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ mustRun(callback : callable = «unknown», env : array = []) : static</text>
<text text-anchor="start" x="30" y="-1188.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ start(callback : callable = «unknown», env : array = [])</text>
<text text-anchor="start" x="30" y="-1169.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ restart(callback : callable = «unknown», env : array = []) : static</text>
<text text-anchor="start" x="30" y="-1150.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ wait(callback : callable = «unknown») : int</text>
<text text-anchor="start" x="30" y="-1131.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ waitUntil(callback : callable) : bool</text>
<text text-anchor="start" x="30" y="-1112.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getPid() : ?int</text>
<text text-anchor="start" x="30" y="-1093.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ signal(signal : int) : static</text>
<text text-anchor="start" x="30" y="-1074.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ disableOutput() : static</text>
<text text-anchor="start" x="30" y="-1055.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ enableOutput() : static</text>
<text text-anchor="start" x="30" y="-1036.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isOutputDisabled() : bool</text>
<text text-anchor="start" x="30" y="-1017.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getOutput() : string</text>
<text text-anchor="start" x="30" y="-998.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getIncrementalOutput() : string</text>
<text text-anchor="start" x="30" y="-979.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getIterator(flags : int = 0) : Generator</text>
<text text-anchor="start" x="30" y="-960.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ clearOutput() : static</text>
<text text-anchor="start" x="30" y="-941.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getErrorOutput() : string</text>
<text text-anchor="start" x="30" y="-922.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getIncrementalErrorOutput() : string</text>
<text text-anchor="start" x="30" y="-903.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ clearErrorOutput() : static</text>
<text text-anchor="start" x="30" y="-884.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getExitCode() : ?int</text>
<text text-anchor="start" x="30" y="-865.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getExitCodeText() : ?string</text>
<text text-anchor="start" x="30" y="-846.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isSuccessful() : bool</text>
<text text-anchor="start" x="30" y="-827.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ hasBeenSignaled() : bool</text>
<text text-anchor="start" x="30" y="-808.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getTermSignal() : int</text>
<text text-anchor="start" x="30" y="-789.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ hasBeenStopped() : bool</text>
<text text-anchor="start" x="30" y="-770.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getStopSignal() : int</text>
<text text-anchor="start" x="30" y="-751.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isRunning() : bool</text>
<text text-anchor="start" x="30" y="-732.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isStarted() : bool</text>
<text text-anchor="start" x="30" y="-713.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isTerminated() : bool</text>
<text text-anchor="start" x="30" y="-694.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getStatus() : string</text>
<text text-anchor="start" x="30" y="-675.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ stop(timeout : float = 10, signal : int = «unknown») : ?int</text>
<text text-anchor="start" x="30" y="-656.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ addOutput(line : string)</text>
<text text-anchor="start" x="30" y="-637.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ addErrorOutput(line : string)</text>
<text text-anchor="start" x="30" y="-618.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getLastOutputTime() : ?float</text>
<text text-anchor="start" x="30" y="-599.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getCommandLine() : string</text>
<text text-anchor="start" x="30" y="-580.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getTimeout() : ?float</text>
<text text-anchor="start" x="30" y="-561.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getIdleTimeout() : ?float</text>
<text text-anchor="start" x="30" y="-542.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setTimeout(timeout : float) : static</text>
<text text-anchor="start" x="30" y="-523.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setIdleTimeout(timeout : float) : static</text>
<text text-anchor="start" x="30" y="-504.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setTty(tty : bool) : static</text>
<text text-anchor="start" x="30" y="-485.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isTty() : bool</text>
<text text-anchor="start" x="30" y="-466.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setPty(bool : bool) : static</text>
<text text-anchor="start" x="30" y="-447.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ isPty() : bool</text>
<text text-anchor="start" x="30" y="-428.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getWorkingDirectory() : ?string</text>
<text text-anchor="start" x="30" y="-409.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setWorkingDirectory(cwd : string) : static</text>
<text text-anchor="start" x="30" y="-390.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getEnv() : array</text>
<text text-anchor="start" x="30" y="-371.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setEnv(env : array) : static</text>
<text text-anchor="start" x="30" y="-352.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getInput()</text>
<text text-anchor="start" x="30" y="-333.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setInput(input : mixed) : static</text>
<text text-anchor="start" x="30" y="-314.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ checkTimeout()</text>
<text text-anchor="start" x="30" y="-295.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ getStartTime() : float</text>
<text text-anchor="start" x="30" y="-276.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ setOptions(options : array)</text>
<text text-anchor="start" x="30" y="-257.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» isTtySupported() : bool</text>
<text text-anchor="start" x="30" y="-238.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «static» isPtySupported() : bool</text>
</g>
<!-- Overtrue\\PHPLint\\Process\\LintProcess&#45;&gt;Symfony\\Component\\Process\\Process -->
<g id="edge3" class="edge">
<title>Overtrue\\PHPLint\\Process\\LintProcess&#45;&gt;Symfony\\Component\\Process\\Process</title>
<path fill="none" stroke="#000000" d="M484,-1738.8898C484,-1723.4634 484,-1704.631 484,-1683.1123"/>
<polygon fill="none" stroke="#000000" points="487.5001,-1683.0388 484,-1673.0389 480.5001,-1683.0389 487.5001,-1683.0388"/>
</g>
<!-- IteratorAggregate -->
<g id="node4" class="node">
<title>IteratorAggregate</title>
<polygon fill="#fefece" stroke="transparent" points="565.5,-179 402.5,-179 402.5,-106 565.5,-106 565.5,-179"/>
<polygon fill="#eeeeee" stroke="transparent" points="411,-140.5 411,-174.5 558,-174.5 558,-140.5 411,-140.5"/>
<polygon fill="none" stroke="#000000" points="411,-140.5 411,-174.5 558,-174.5 558,-140.5 411,-140.5"/>
<text text-anchor="start" x="452" y="-161.3" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">«interface»</text>
<text text-anchor="start" x="431.5" y="-147.3" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">IteratorAggregate</text>
<polygon fill="none" stroke="#000000" points="411,-134.5 411,-140.5 558,-140.5 558,-134.5 411,-134.5"/>
<polygon fill="none" stroke="#000000" points="411,-109.5 411,-134.5 558,-134.5 558,-109.5 411,-109.5"/>
<text text-anchor="start" x="416" y="-118.3" font-family="Times,serif" font-size="14.00" fill="#000000">+ «abstract» getIterator()</text>
</g>
<!-- Symfony\\Component\\Process\\Process&#45;&gt;IteratorAggregate -->
<g id="edge2" class="edge">
<title>Symfony\\Component\\Process\\Process&#45;&gt;IteratorAggregate</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M484,-225.8236C484,-212.2985 484,-200.1129 484,-189.5007"/>
<polygon fill="none" stroke="#000000" points="487.5001,-189.4216 484,-179.4216 480.5001,-189.4216 487.5001,-189.4216"/>
</g>
<!-- Traversable -->
<g id="node5" class="node">
<title>Traversable</title>
<polygon fill="#fefece" stroke="transparent" points="530,-70 438,-70 438,-16 530,-16 530,-70"/>
<polygon fill="#eeeeee" stroke="transparent" points="446,-32 446,-66 522,-66 522,-32 446,-32"/>
<polygon fill="none" stroke="#000000" points="446,-32 446,-66 522,-66 522,-32 446,-32"/>
<text text-anchor="start" x="451.5" y="-52.8" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">«interface»</text>
<text text-anchor="start" x="449" y="-38.8" font-family="Times,serif" font-weight="bold" font-size="14.00" fill="#000000">Traversable</text>
<polygon fill="none" stroke="#000000" points="446,-26 446,-32 522,-32 522,-26 446,-26"/>
<polygon fill="none" stroke="#000000" points="446,-20 446,-26 522,-26 522,-20 446,-20"/>
</g>
<!-- IteratorAggregate&#45;&gt;Traversable -->
<g id="edge1" class="edge">
<title>IteratorAggregate&#45;&gt;Traversable</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M484,-105.7326C484,-97.4806 484,-88.7163 484,-80.4374"/>
<polygon fill="none" stroke="#000000" points="487.5001,-80.2854 484,-70.2854 480.5001,-80.2855 487.5001,-80.2854"/>
</g>
</g>
</svg>
